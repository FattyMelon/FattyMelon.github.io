<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon&#39; Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fattymelon.github.io/"/>
  <updated>2017-05-25T06:21:17.000Z</updated>
  <id>https://fattymelon.github.io/</id>
  
  <author>
    <name>Simon chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo接入Gitment评论</title>
    <link href="https://fattymelon.github.io/2017/05/24/hexo_access/"/>
    <id>https://fattymelon.github.io/2017/05/24/hexo_access/</id>
    <published>2017-05-24T02:59:21.000Z</published>
    <updated>2017-05-25T06:21:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>做好博客之后想添加评论功能。第三方评论有多说，disqus，网易云跟帖等，但是多说即将关闭，disqus好不容易弄好，老是加载不出来，网易嘛，他申请的时候域名github.io已经被占用就不行了。所以就接入了国内大神做的<a href="https://github.com/imsun/gitment" target="_blank" rel="external">Gitment</a></p>
<a id="more"></a>
<h2 id="Gitment"><a href="#Gitment" class="headerlink" title="Gitment"></a>Gitment</h2><h3 id="1-注册-OAuth-Application"><a href="#1-注册-OAuth-Application" class="headerlink" title="1. 注册 OAuth Application"></a>1. 注册 OAuth Application</h3><p><a href="https://github.com/settings/applications/new" target="_blank" rel="external">点击此处</a>注册一个Oauth Application，其他信息可以随意，但是确保填入正确的 callback URL（一般是评论页面对应的域名，图中写的是xxxx.github.io）<br><div class="figure " style="width:600px;"><a class="fancybox" href="./Oauth.png" title="注册网站填写信息" data-fancybox-group=""><img class="fig-img" src="./Oauth.png" style="width:600px;" alt="注册网站填写信息"></a><span class="caption">注册网站填写信息</span></div><div style="clear:both;"></div></p>
<p>注册完成后会得到一个client id和client secret</p>
<h3 id="2-接入-Gitment"><a href="#2-接入-Gitment" class="headerlink" title="2. 接入 Gitment"></a>2. 接入 Gitment</h3><p>根据备注把内容填好，并将代码放入评论页面<br><strong>这里最重要的是repo，很多人不知道应该填什么，如果你用的是github page，那你只需要把xxxx改成你自己的name就好</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;div id=<span class="string">"container"</span>&gt;&lt;/div&gt;</div><div class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</div><div class="line">&lt;script src="https://imsun.github.io/gitment/dist/gitment.browser.js"&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">var</span> gitment = <span class="keyword">new</span> Gitment(&#123;</div><div class="line">  <span class="attr">owner</span>: <span class="string">'xxxx'</span>, <span class="comment">//github name,必须是注册时候的名字，就是下面这一行的xxxx</span></div><div class="line">  repo: <span class="string">'xxxx.github.io'</span>, <span class="comment">//存储评论的repositories 名字</span></div><div class="line">  oauth: &#123;</div><div class="line">    <span class="attr">client_id</span>: <span class="string">'你的 client ID'</span>,</div><div class="line">    <span class="attr">client_secret</span>: <span class="string">'你的 client secret'</span>,</div><div class="line">  &#125;,</div><div class="line">&#125;)</div><div class="line">gitment.render(<span class="string">'container'</span>)</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h3 id="3-初始化"><a href="#3-初始化" class="headerlink" title="3. 初始化"></a>3. 初始化</h3><p>配置好以后，会在你的页面看到一个初始化按钮。<br><div class="figure " style="width:600px;"><a class="fancybox" href="./comment.png" title="" data-fancybox-group=""><img class="fig-img" src="./comment.png" style="width:600px;" alt=""></a></div><div style="clear:both;"></div></p>
<p>点击之后会在你的repo的issues页面下创建对应的issue.<br><div class="figure " style="width:600px;"><a class="fancybox" href="./issue.png" title="" data-fancybox-group=""><img class="fig-img" src="./issue.png" style="width:600px;" alt=""></a></div><div style="clear:both;"></div></p>
<h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h3><p>测试的话直接就可以在博客底下评论啦。哈哈哈哈</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做好博客之后想添加评论功能。第三方评论有多说，disqus，网易云跟帖等，但是多说即将关闭，disqus好不容易弄好，老是加载不出来，网易嘛，他申请的时候域名github.io已经被占用就不行了。所以就接入了国内大神做的&lt;a href=&quot;https://github.com/imsun/gitment&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitment&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://fattymelon.github.io/categories/hexo/"/>
    
    
      <category term="gitment" scheme="https://fattymelon.github.io/tags/gitment/"/>
    
      <category term="hexo" scheme="https://fattymelon.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>smallpt详解(三)</title>
    <link href="https://fattymelon.github.io/2017/04/25/raytracing3/"/>
    <id>https://fattymelon.github.io/2017/04/25/raytracing3/</id>
    <published>2017-04-25T06:26:55.000Z</published>
    <updated>2017-05-25T06:57:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要对smallpt的光线跟踪函数进行详细的解释<br><a id="more"></a></p>
<h2 id="1-光线跟踪详细解释"><a href="#1-光线跟踪详细解释" class="headerlink" title="1. 光线跟踪详细解释"></a>1. 光线跟踪详细解释</h2><p>计算法向量，计算折射光线，反射光线等，可以查阅《3D数学基础，图形与游戏开发》</p>
<h3 id="1-1-计算部分"><a href="#1-1-计算部分" class="headerlink" title="1.1 计算部分"></a>1.1 计算部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function">Vec <span class="title">radiance</span><span class="params">(<span class="keyword">const</span> Ray &amp;r, <span class="keyword">int</span> depth, <span class="keyword">unsigned</span> <span class="keyword">short</span> *Xi)</span> </span>&#123;</div><div class="line">    <span class="keyword">double</span> t;                               <span class="comment">// 与射线相交物体的距离</span></div><div class="line">    <span class="keyword">int</span> id = <span class="number">0</span>;                               <span class="comment">// 与射线相交物体的id</span></div><div class="line">    <span class="keyword">if</span> (!intersect(r, t, id)) </div><div class="line">        <span class="keyword">return</span> Vec(); <span class="comment">// 如果都没有相交，则返回emisson(0, 0, 0)</span></div><div class="line">    <span class="keyword">const</span> Sphere &amp;obj = spheres[id];        <span class="comment">// the hit object </span></div><div class="line">    Vec x = r.o + r.d*t, n = (x - obj.position).norm(); <span class="comment">// 计算n,球面法向量</span></div><div class="line">    Vec nl = n.dot(r.d) &lt; <span class="number">0</span> ? n : n*<span class="number">-1</span>, f = obj.color;</div><div class="line">    <span class="keyword">double</span> p = f.x&gt;f.y &amp;&amp; f.x&gt;f.z ? f.x : f.y&gt;f.z ? f.y : f.z; <span class="comment">// 找出最大的值</span></div><div class="line">    <span class="keyword">if</span> (++depth&gt;<span class="number">5</span>||!p) </div><div class="line">        <span class="keyword">if</span> (erand48(Xi)&lt;p) </div><div class="line">            f = f*(<span class="number">1</span> / p); <span class="comment">//假设f为(0.5, 0.2, 0.2)，那么作者假定这个表面的反射率为f*(1/0.5)，也就是颜色值最大的反射率最高(1, 0.4, 0.4)</span></div><div class="line">        <span class="keyword">else</span>  </div><div class="line">            <span class="keyword">return</span> obj.emission;</div></pre></td></tr></table></figure>
<h3 id="1-2-漫反射"><a href="#1-2-漫反射" class="headerlink" title="1.2 漫反射"></a>1.2 漫反射</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (obj.refl == DIFF) &#123;                  <span class="comment">// 如果物体的反射属性是漫反射 </span></div><div class="line">    <span class="keyword">double</span> r1 = <span class="number">2</span> * M_PI*erand48(Xi), r2 = erand48(Xi), r2s = <span class="built_in">sqrt</span>(r2); <span class="comment">//取随机数</span></div><div class="line">    Vec w = nl, u = ((<span class="built_in">fabs</span>(w.x)&gt;<span class="number">.1</span> ? Vec(<span class="number">0</span>, <span class="number">1</span>) : Vec(<span class="number">1</span>)).cross(w)).norm(), v = w.cross(u);  <span class="comment">//w，v，u为正交基</span></div><div class="line">    Vec d = (u*<span class="built_in">cos</span>(r1)*r2s + v*<span class="built_in">sin</span>(r1)*r2s + w*<span class="built_in">sqrt</span>(<span class="number">1</span> - r2)).norm(); <span class="comment">//求得一个随机的漫反射光线，继续迭代</span></div><div class="line">    <span class="keyword">return</span> obj.emission + f.mult(radiance(Ray(x, d), depth, Xi));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="1-3-镜面反射光"><a href="#1-3-镜面反射光" class="headerlink" title="1.3 镜面反射光"></a>1.3 镜面反射光</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (obj.refl == SPEC)            <span class="comment">// 如果物体的反射属性是漫反射 </span></div><div class="line">        <span class="keyword">return</span> obj.emission + f.mult(radiance(Ray(x, r.d - n * <span class="number">2</span> * n.dot(r.d)), depth, Xi)); <span class="comment">//这个比较简单，只要求得反射光的角度即可</span></div></pre></td></tr></table></figure>
<h3 id="1-4-折射加反射"><a href="#1-4-折射加反射" class="headerlink" title="1.4 折射加反射"></a>1.4 折射加反射</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Ray reflRay(x, r.d - n * 2 * n.dot(r.d));     // 由平行四边形的方法求得反射光的direction</div><div class="line">    bool into = n.dot(nl)&gt;0;                // 判断光线是否是进入球体</div><div class="line">    double nc = 1, nt = 1.5, nnt = into ? nc / nt : nt / nc, ddn = r.d.dot(nl), cos2t;</div><div class="line">    if ((cos2t = 1 - nnt*nnt*(1 - ddn*ddn))&lt;0)    // 如果求得cos2t&lt;0，就没必要进行折射了。</div><div class="line">        return obj.emission + f.mult(radiance(reflRay, depth, Xi));</div><div class="line">    Vec tdir = (r.d*nnt - n*((into ? 1 : -1)*(ddn*nnt + sqrt(cos2t)))).norm(); //折射角的角度</div><div class="line">    double a = nt - nc, b = nt + nc, R0 = a*a / (b*b), c = 1 - (into ? -ddn : tdir.dot(n));</div><div class="line">    double Re = R0 + (1 - R0)*c*c*c*c*c, Tr = 1 - Re, P = .25 + .5*Re, RP = Re / P, TP = Tr / (1 - P);</div><div class="line">    return obj.emission + f.mult(depth&gt;2 ? (erand48(Xi)&lt;P ?   // 轮盘赌</div><div class="line">        radiance(reflRay, depth, Xi)*RP : radiance(Ray(x, tdir), depth, Xi)*TP) :</div><div class="line">        radiance(reflRay, depth, Xi)*Re + radiance(Ray(x, tdir), depth, Xi)*Tr);</div></pre></td></tr></table></figure>
<h2 id="2-加烟雾效果"><a href="#2-加烟雾效果" class="headerlink" title="2 加烟雾效果"></a>2 加烟雾效果</h2><p>学习完smallpt之后，看到图形学的书上提到了烟雾效果。<br><img src="http://img.blog.csdn.net/20170408210135631?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>编程实现<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MATH       2.71828</span></div><div class="line"><span class="function">Vector <span class="title">frog_color</span><span class="params">(<span class="number">0.7</span>, <span class="number">0.7</span>, <span class="number">0.7</span>)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">f_atmo</span><span class="params">(<span class="keyword">double</span> distance)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>(E_MATH, -(<span class="number">0.01</span> * <span class="number">0.01</span>* distance * distance));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 然后修改光线反射，折射中的代码</span></div><div class="line"><span class="comment">// 在这个实现中，我只在第一层的递归加了烟雾效果</span></div><div class="line"><span class="comment">// 修改漫反射的代码</span></div><div class="line">        <span class="keyword">if</span> (depth &lt;= <span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">double</span> fTemp = f_atmo(distance);</div><div class="line">            <span class="keyword">return</span> obj._emission + (radiance(Ray(hit_point, direct), depth)) * fTemp + frog_color*(<span class="number">1</span> - fTemp);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> </div><div class="line">            <span class="keyword">return</span> obj._emission + f.mult(radiance(Ray(hit_point, direct), depth));</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 修改反射</span></div><div class="line"><span class="keyword">if</span> (depth &lt;= <span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">double</span> fTemp = f_atmo(distance);</div><div class="line">            <span class="keyword">return</span> obj._emission + (radiance(Ray(hit_point, direct_refl), depth)) * fTemp + frog_color*(<span class="number">1</span> - fTemp);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="keyword">return</span> obj._emission + radiance(Ray(hit_point, direct_refl), depth);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 修改折射</span></div><div class="line">        <span class="keyword">double</span> fTemp = f_atmo(distance);</div><div class="line">            <span class="keyword">return</span> ((radiance(ray_refl, depth) * Fe</div><div class="line">                + radiance(ray_refr, depth) * Fr))*fTemp + frog_color*(<span class="number">1</span> - fTemp);</div></pre></td></tr></table></figure></p>
<p>效果图1，无烟雾</p>
<p><img src="http://img.blog.csdn.net/20170408210727109?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>效果图2，加烟雾，可以看出后面那个大球的轮廓。感觉像现在中国最流行的雾霾。 :D<br><img src="http://img.blog.csdn.net/20170408210736953?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要对smallpt的光线跟踪函数进行详细的解释&lt;br&gt;
    
    </summary>
    
      <category term="光线跟踪" scheme="https://fattymelon.github.io/categories/%E5%85%89%E7%BA%BF%E8%B7%9F%E8%B8%AA/"/>
    
    
  </entry>
  
  <entry>
    <title>smallpt详解(二)</title>
    <link href="https://fattymelon.github.io/2017/04/22/raytracing2/"/>
    <id>https://fattymelon.github.io/2017/04/22/raytracing2/</id>
    <published>2017-04-22T06:26:55.000Z</published>
    <updated>2017-05-25T06:55:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要说一下自己的理解，<br>关于smallpt的cx,cy是怎么来的，是用来做什么的？<br><a id="more"></a></p>
<h2 id="1-透视投影的原理"><a href="#1-透视投影的原理" class="headerlink" title="1. 透视投影的原理"></a>1. 透视投影的原理</h2><p><img src="http://img.blog.csdn.net/20170408195926856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>如果是小孔成像的话，我们应该是投影在z=-d的平面上，但是这样做涉及到负值操作，还使图像反了。如果我们将投影平面移到z = d，这样做就可以避免负值问题。（但是有个问题就是，物体在摄像机和z=d平面之间的物体，电脑就无法绘制了）</p>
<h2 id="2-cx和cy的定义"><a href="#2-cx和cy的定义" class="headerlink" title="2. cx和cy的定义"></a>2. cx和cy的定义</h2><p><img src="http://img.blog.csdn.net/20170408180858973?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>及计算光线d的代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Vec d = cx*(((sx + <span class="number">.5</span> + dx) / <span class="number">2</span> + x) / w - <span class="number">.5</span>) +</div><div class="line">            cy*(((sy + <span class="number">.5</span> + dy) / <span class="number">2</span> + y) / h - <span class="number">.5</span>) + cam.d;</div></pre></td></tr></table></figure></p>
<p>其中sx,sy是[0,1]，dx,dy的范围是[-1,1]，dx,dy的分布函数<br><img src="http://img.blog.csdn.net/20170408200506124?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>所以(sx + .5 + dx) / 2这个的值得范围是[-0.25, 0.75]。这个值主要是为了在随机采样时，对x进行偏移。我们如果把他忽略不计。<br>那么(((sx + .5 + dx) / 2 + x) / w - .5)的值其实是在[-0.5, 0.5]的。<br>当x = w-1, y = 0时，<br>(0.5 <em> cx)+(-0.5 </em> cy)+cam.d是为了计算最大角度的射出光线。</p>
<p>图例1， 如果我们的cx = (w / h)<br><img src="http://img.blog.csdn.net/20170408200023623?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>图例2， 如果我们的cx = (w/h *0.5135)，我们的最大角度肯定比图例1小。<br><img src="http://img.blog.csdn.net/20170408200032935?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>###3. 验证结果<br>我的理解是：<br>0.5135这个参数就是为了设置视角大小的。<br>作者计算好了角度之后，才这样设置的。</p>
<p>例子1<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> testVal = <span class="number">1.0</span>;</div><div class="line"><span class="keyword">double</span> cx = Vec(w * testVal / h), cy = (cx.cross(cam.d)).norm() * testVal;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170408202111900?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>例子2<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> testVal = <span class="number">0.5135</span>;</div><div class="line"><span class="keyword">double</span> cx = Vec(w * testVal / h), cy = (cx.cross(cam.d)).norm() * testVal;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170408202302541?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>例子3<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> testVal = <span class="number">0.2</span>;</div><div class="line"><span class="keyword">double</span> cx = Vec(w * testVal / h), cy = (cx.cross(cam.d)).norm() * testVal;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170408202608815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要说一下自己的理解，&lt;br&gt;关于smallpt的cx,cy是怎么来的，是用来做什么的？&lt;br&gt;
    
    </summary>
    
      <category term="光线跟踪" scheme="https://fattymelon.github.io/categories/%E5%85%89%E7%BA%BF%E8%B7%9F%E8%B8%AA/"/>
    
    
  </entry>
  
  <entry>
    <title>smallpt详解(一)</title>
    <link href="https://fattymelon.github.io/2017/04/20/raytracing1/"/>
    <id>https://fattymelon.github.io/2017/04/20/raytracing1/</id>
    <published>2017-04-20T06:26:55.000Z</published>
    <updated>2017-05-25T06:55:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要是为了记录我学习smallpt的过程。第一部分是关于整个程序的大致分解。第二部分主要说一下我对main函数中cx和cy的理解。第三部分主要说明光线跟踪的每一行代码所用到的数学知识。<br><a id="more"></a></p>
<h2 id="1-基本功能函数"><a href="#1-基本功能函数" class="headerlink" title="1. 基本功能函数"></a>1. 基本功能函数</h2><h3 id="1-1-随机函数"><a href="#1-1-随机函数" class="headerlink" title="1.1 随机函数"></a>1.1 随机函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> M_PI 3.1415</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">erand48</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> xsubi[<span class="number">3</span>])</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (<span class="keyword">double</span>)rand() / (<span class="keyword">double</span>)RAND_MAX;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>erand48()函数是linux下的随机函数，可以取[0, 1]的随机浮点数，在windows下必须自己写一个类似功能的函数。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">clamp</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x &lt; <span class="number">0</span> ? <span class="number">0</span> : x &gt; <span class="number">1</span> ? <span class="number">1</span> : x; &#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">toInt</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">int</span>(<span class="built_in">pow</span>(clamp(x), <span class="number">1</span> / <span class="number">2.2</span>) * <span class="number">255</span> + <span class="number">.5</span>); &#125;    <span class="comment">//四舍五入</span></div></pre></td></tr></table></figure>
<p>这里的难点在于为什么要用pow(clamp(x), 1/ 2.2)，查了资料才知道是gamma校正方法，详情可以看<br><a href="http://blog.csdn.net/candycat1992/article/details/46228771" target="_blank" rel="external">http://blog.csdn.net/candycat1992/article/details/46228771</a></p>
<h3 id="1-2-Vec类"><a href="#1-2-Vec类" class="headerlink" title="1.2 Vec类"></a>1.2 Vec类</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vec</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> x, y, z;</div><div class="line">    Vec(<span class="keyword">double</span> x_ = <span class="number">0</span>, <span class="keyword">double</span> y_ = <span class="number">0</span>, <span class="keyword">double</span> z_ = <span class="number">0</span>) : x(x_), y(y_), z(z_) &#123;&#125;</div><div class="line">    Vec <span class="keyword">operator</span>+(<span class="keyword">const</span> Vec&amp; rhs) <span class="keyword">const</span> &#123;</div><div class="line">        <span class="keyword">return</span> Vec(x + rhs.x, y + rhs.y, z + rhs.z);</div><div class="line">    &#125;</div><div class="line">    Vec <span class="keyword">operator</span>-(<span class="keyword">const</span> Vec&amp; rhs) <span class="keyword">const</span> &#123;</div><div class="line">        <span class="keyword">return</span> Vec(x - rhs.x, y - rhs.y, z - rhs.z);</div><div class="line">    &#125;</div><div class="line">    Vec <span class="keyword">operator</span>*(<span class="keyword">double</span> b) <span class="keyword">const</span> &#123;</div><div class="line">        <span class="keyword">return</span> Vec(x * b, y * b, z * b);</div><div class="line">    &#125;</div><div class="line">    <span class="function">Vec <span class="title">mult</span><span class="params">(<span class="keyword">const</span> Vec &amp;rhs)</span> <span class="keyword">const</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> Vec(x * rhs.x, y * rhs.y, z * rhs.z);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(<span class="keyword">const</span> Vec &amp;rhs)</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> x*rhs.x + y*rhs.y + z*rhs.z; &#125;</div><div class="line">    <span class="function">Vec <span class="title">cross</span><span class="params">(<span class="keyword">const</span> Vec &amp;rhs)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> Vec(y * rhs.z - z * rhs.y,</div><div class="line">            z * rhs.x - x * rhs.z,</div><div class="line">            x * rhs.y - y * rhs.x);</div><div class="line">    &#125;</div><div class="line">    <span class="function">Vec&amp; <span class="title">norm</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> * (<span class="number">1</span> / <span class="built_in">sqrt</span>(x*x + y*y + z*z)); &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1) 其中包括向量加减，数乘，标准化，点乘，叉乘，还有需要注意的mult函数，后来会提到。<br>2) 这个Vec类在之后的计算中既可以表达向量Vector，亦可以表达三维点Point，也用来保存颜色RGB的值。</p>
<h3 id="1-3-Ray类"><a href="#1-3-Ray类" class="headerlink" title="1.3 Ray类"></a>1.3 Ray类</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ray</span> </span></div><div class="line">&#123;</div><div class="line">    Vec o, d;    <span class="comment">// o is original point, d is direction of lighting</span></div><div class="line">    Ray(Vec o_, Vec d_) : o(o_), d(d_) &#123;&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>射线方程，o是射线的起点，d代表方向</p>
<h3 id="1-4-Sphere类"><a href="#1-4-Sphere类" class="headerlink" title="1.4 Sphere类"></a>1.4 Sphere类</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">enum</span> Refl_t &#123; DIFF, SPEC, REFR&#125;;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Sphere</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> rad;    <span class="comment">// radius</span></div><div class="line">    Vec position, emission, color;</div><div class="line">    Refl_t refl;</div><div class="line">    </div><div class="line">    Sphere(<span class="keyword">double</span> rad_, Vec p_, Vec e_, Vec c_, Refl_t refl_) :</div><div class="line">        rad(rad_), position(p_), emission(e_), color(c_), refl(refl_) &#123;&#125;</div><div class="line">    <span class="function"><span class="keyword">double</span> <span class="title">intersect</span><span class="params">(<span class="keyword">const</span> Ray &amp;r)</span> <span class="keyword">const</span> </span>&#123;    <span class="comment">// return distance, 0 if nohit</span></div><div class="line">        Vec op = position - r.o;</div><div class="line">        <span class="keyword">double</span> t, eps = <span class="number">1e-4</span>;</div><div class="line">        <span class="keyword">double</span> b = op.dot(r.d), det = b*b + rad*rad - op.dot(op);</div><div class="line">        <span class="keyword">if</span> (det &lt; <span class="number">0</span>)    </div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="keyword">else</span>    </div><div class="line">            det = <span class="built_in">sqrt</span>(det);</div><div class="line">        <span class="keyword">return</span> (t = b - det) &gt; eps ? t : ((t = b + det) &gt; eps ? t : <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>射线和球体/圆，求交原理图：</p>
<p><img src="http://img.blog.csdn.net/20170408164053927?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>求交的基本原理就是将射线的参数方程代入到圆的函数中，求t的值。<br>1）将P(t) = O + tD 代入圆方程，会得到 t 的一元二次方程。<br>2）先求出Vec op，op是用球心p的坐标减去射线的起点，表示原理图中的(O - C)。<br>3）b = op.dot(r.d)指代 “ D * (O - C) “<br>4）求det，这里要注意我们求的b和原理图中的b差了两倍，所以可以直接用<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> det = b * b - op.dot(op) + rad * rad;</div></pre></td></tr></table></figure></p>
<p>如果det&lt;0说明无解，直接return 0。<br>否则求根号的det<br>5）最终的解有一个或两个，可能在 t = b - det，或者t = b + det中，选择t大于0并且两个中较小的t。</p>
<hr>
<p><img src="http://img.blog.csdn.net/20170408170258582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTM4MDg4MDMwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h2 id="2-绘制过程"><a href="#2-绘制过程" class="headerlink" title="2. 绘制过程"></a>2. 绘制过程</h2><h3 id="2-1-放置球的位置"><a href="#2-1-放置球的位置" class="headerlink" title="2.1 放置球的位置"></a>2.1 放置球的位置</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Sphere spheres[] = &#123;</div><div class="line">    Sphere(<span class="number">1e5</span>, Vec(<span class="number">1e5</span> + <span class="number">1</span>, <span class="number">40.8</span>, <span class="number">81.6</span>), Vec(), Vec(<span class="number">.75</span>, <span class="number">.25</span>, <span class="number">.25</span>), Refl_t::DIFF),    <span class="comment">//left</span></div><div class="line">    Sphere(<span class="number">1e5</span>, Vec(<span class="number">-1e5</span> + <span class="number">99</span>,<span class="number">40.8</span>,<span class="number">81.6</span>),Vec(),Vec(<span class="number">.25</span>,<span class="number">.25</span>,<span class="number">.75</span>), Refl_t::DIFF),<span class="comment">//Rght </span></div><div class="line">    Sphere(<span class="number">1e5</span>, Vec(<span class="number">50</span>,<span class="number">40.8</span>, <span class="number">1e5</span>),     Vec(),Vec(<span class="number">.75</span>,<span class="number">.75</span>,<span class="number">.75</span>), Refl_t::DIFF),<span class="comment">//Back </span></div><div class="line">    Sphere(<span class="number">1e5</span>, Vec(<span class="number">50</span>,<span class="number">40.8</span>,<span class="number">-1e5</span> + <span class="number">170</span>), Vec(),Vec(),           Refl_t::DIFF),<span class="comment">//Frnt </span></div><div class="line">    Sphere(<span class="number">1e5</span>, Vec(<span class="number">50</span>, <span class="number">1e5</span>, <span class="number">81.6</span>),    Vec(),Vec(<span class="number">.75</span>,<span class="number">.75</span>,<span class="number">.75</span>),Refl_t::DIFF),<span class="comment">//Botm </span></div><div class="line">    Sphere(<span class="number">1e5</span>, Vec(<span class="number">50</span>,<span class="number">-1e5</span> + <span class="number">81.6</span>,<span class="number">81.6</span>),Vec(),Vec(<span class="number">.75</span>,<span class="number">.75</span>,<span class="number">.75</span>),Refl_t::DIFF),<span class="comment">//Top </span></div><div class="line">    Sphere(<span class="number">16.5</span>,Vec(<span class="number">27</span>,<span class="number">16.5</span>,<span class="number">47</span>),       Vec(),Vec(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)*<span class="number">.999</span>, Refl_t::SPEC),<span class="comment">//Mirr </span></div><div class="line">    Sphere(<span class="number">16.5</span>,Vec(<span class="number">73</span>,<span class="number">16.5</span>,<span class="number">78</span>),       Vec(),Vec(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)*<span class="number">.999</span>, Refl_t::REFR),<span class="comment">//Glas </span></div><div class="line">    Sphere(<span class="number">600</span>, Vec(<span class="number">50</span>,<span class="number">681.6</span> - <span class="number">.27</span>,<span class="number">81.6</span>),Vec(<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>),  Vec(), Refl_t::DIFF) <span class="comment">//Lite </span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>1）用6个很大的球体当做平面（DIFF属性，只有漫反射），因为半径很大的话，你在近距离看起来，球面就很像一个平面。<br>作者这样做应该是为了避免去写平面求交，平面类等函数。<br>2）用1个球表示光源，就是Lite，1个Mirr球（完全反射），1个Glass球（折射和反射都有）</p>
<h3 id="2-2-遍历所有的球，求交点"><a href="#2-2-遍历所有的球，求交点" class="headerlink" title="2.2 遍历所有的球，求交点"></a>2.2 遍历所有的球，求交点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">intersect</span><span class="params">(<span class="keyword">const</span> Ray &amp;r, <span class="keyword">double</span> &amp;t, <span class="keyword">int</span> &amp;id)</span> </span>&#123;</div><div class="line">    <span class="keyword">double</span> n = <span class="keyword">sizeof</span>(spheres) / <span class="keyword">sizeof</span>(Sphere), d, inf = t = <span class="number">1e20</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="keyword">int</span>(n); i--;) &#123;</div><div class="line">        <span class="keyword">if</span> ((d = spheres[i].intersect(r)) &amp;&amp; d &lt; t) </div><div class="line">        &#123;</div><div class="line">            t = d;</div><div class="line">            id = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> t &lt; inf;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>此光线射出去，在所有的球体中求交点。<br>求出距离camera最近的交点，这就是待会要绘制在屏幕上的主要的点。</p>
<h3 id="2-3-main函数"><a href="#2-3-main函数" class="headerlink" title="2.3 main函数"></a>2.3 main函数</h3><p>1）camera的位置是在（50， 52， 295.6）， 往z轴的负方向看。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">int main(int argc, char *argv[])</div><div class="line">&#123;</div><div class="line">    int w = 1024, h = 768, samps = argc == 2 ? atoi(argv[1]) / 4 : 10; // # samples </div><div class="line">    Ray cam(Vec(50, 52, 295.6), Vec(0, -0.042612, -1).norm()); // cam pos, dir </div><div class="line">    Vec cx = Vec(w*.5135 / h), cy = (cx.cross(cam.d)).norm()*.5135, r, *c = new Vec[w*h];</div><div class="line">    // ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2）遍历每个像素点，用随机采样的方式求得要射出的光线的方向d。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y&lt;h; y++) &#123;                       <span class="comment">// Loop over image rows</span></div><div class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\rRendering (%d spp) %5.2f%%"</span>, samps * <span class="number">4</span>, <span class="number">100.</span>*y / (h - <span class="number">1</span>));</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">short</span> x = <span class="number">0</span>, Xi[<span class="number">3</span>] = &#123; <span class="number">0</span>,<span class="number">0</span>,y*y*y &#125;; x&lt;w; x++)   <span class="comment">// Loop cols </span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> sy = <span class="number">0</span>, i = (h - y - <span class="number">1</span>)*w + x; sy&lt;<span class="number">2</span>; sy++)     <span class="comment">// 2x2 subpixel rows </span></div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> sx = <span class="number">0</span>; sx&lt;<span class="number">2</span>; sx++, r = Vec()) &#123;        <span class="comment">// 2x2 subpixel cols </span></div><div class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> s = <span class="number">0</span>; s&lt;samps; s++) &#123;</div><div class="line">                        <span class="keyword">double</span> r1 = <span class="number">2</span> * erand48(Xi), dx = r1&lt;<span class="number">1</span> ? <span class="built_in">sqrt</span>(r1) - <span class="number">1</span> : <span class="number">1</span> - <span class="built_in">sqrt</span>(<span class="number">2</span> - r1);</div><div class="line">                        <span class="keyword">double</span> r2 = <span class="number">2</span> * erand48(Xi), dy = r2&lt;<span class="number">1</span> ? <span class="built_in">sqrt</span>(r2) - <span class="number">1</span> : <span class="number">1</span> - <span class="built_in">sqrt</span>(<span class="number">2</span> - r2);</div><div class="line">                        Vec d = cx*(((sx + <span class="number">.5</span> + dx) / <span class="number">2</span> + x) / w - <span class="number">.5</span>) +</div><div class="line">                            cy*(((sy + <span class="number">.5</span> + dy) / <span class="number">2</span> + y) / h - <span class="number">.5</span>) + cam.d;</div><div class="line">                        r = r + radiance(Ray(cam.o + d * <span class="number">140</span>, d.norm()), <span class="number">0</span>, Xi)*(<span class="number">1.</span> / samps);</div><div class="line">                    &#125; <span class="comment">// Camera rays are pushed ^^^^^ forward to start in interior </span></div><div class="line">                    c[i] = c[i] + Vec(clamp(r.x), clamp(r.y), clamp(r.z))*<span class="number">.25</span>;</div><div class="line">                &#125;</div><div class="line">    &#125;</div><div class="line">    FILE *f = fopen(<span class="string">"image.ppm"</span>, <span class="string">"w"</span>);         <span class="comment">// Write image to PPM file. </span></div><div class="line">    <span class="built_in">fprintf</span>(f, <span class="string">"P3\n%d %d\n%d\n"</span>, w, h, <span class="number">255</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;w*h; i++)</div><div class="line">        <span class="built_in">fprintf</span>(f, <span class="string">"%d %d %d "</span>, toInt(c[i].x), toInt(c[i].y), toInt(c[i].z));</div></pre></td></tr></table></figure></p>
<h3 id="2-4光线跟踪递归函数"><a href="#2-4光线跟踪递归函数" class="headerlink" title="2.4光线跟踪递归函数"></a>2.4光线跟踪递归函数</h3><p>radiance函数在第二部分介绍。<br>以下是大致的分块。</p>
<p>1)判断是否相交，求交点，求表面法向<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function">Vec <span class="title">radiance</span><span class="params">(<span class="keyword">const</span> Ray &amp;r, <span class="keyword">int</span> depth, <span class="keyword">unsigned</span> <span class="keyword">short</span> *Xi)</span> </span>&#123;</div><div class="line">    <span class="keyword">double</span> t;                               <span class="comment">// distance to intersection </span></div><div class="line">    <span class="keyword">int</span> id = <span class="number">0</span>;                               <span class="comment">// id of intersected object </span></div><div class="line">    <span class="keyword">if</span> (!intersect(r, t, id)) </div><div class="line">        <span class="keyword">return</span> Vec(); <span class="comment">// if miss, return black </span></div><div class="line">    <span class="keyword">const</span> Sphere &amp;obj = spheres[id];        <span class="comment">// the hit object </span></div><div class="line">    Vec x = r.o + r.d*t, n = (x - obj.position).norm();    <span class="comment">// calculate vector n,球面法向量</span></div><div class="line">    Vec nl = n.dot(r.d) &lt; <span class="number">0</span> ? n : n*<span class="number">-1</span>, f = obj.color;</div><div class="line">    <span class="keyword">double</span> p = f.x&gt;f.y &amp;&amp; f.x&gt;f.z ? f.x : f.y&gt;f.z ? f.y : f.z; <span class="comment">// max refl </span></div><div class="line">    <span class="keyword">if</span> (++depth&gt;<span class="number">5</span>||!p) </div><div class="line">        <span class="keyword">if</span> (erand48(Xi)&lt;p) </div><div class="line">            f = f*(<span class="number">1</span> / p); </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">            <span class="keyword">return</span> obj.emission;</div></pre></td></tr></table></figure></p>
<p>2）漫反射（DIFF）<br>如果材质是漫反射，那么就随机生成一个方向进行漫反射。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (obj.refl == DIFF) &#123;                  <span class="comment">// Ideal DIFFUSE reflection </span></div><div class="line">    <span class="keyword">double</span> r1 = <span class="number">2</span> * M_PI*erand48(Xi), r2 = erand48(Xi), r2s = <span class="built_in">sqrt</span>(r2);</div><div class="line">    Vec w = nl, u = ((<span class="built_in">fabs</span>(w.x)&gt;<span class="number">.1</span> ? Vec(<span class="number">0</span>, <span class="number">1</span>) : Vec(<span class="number">1</span>)).cross(w)).norm(), v = w.cross(u);    <span class="comment">//w，v，u为正交基</span></div><div class="line">    Vec d = (u*<span class="built_in">cos</span>(r1)*r2s + v*<span class="built_in">sin</span>(r1)*r2s + w*<span class="built_in">sqrt</span>(<span class="number">1</span> - r2)).norm();</div><div class="line">    <span class="keyword">return</span> obj.emission + f.mult(radiance(Ray(x, d), depth, Xi));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>3）镜面反射（材质为SPEC）<br>计算镜面反射的方向，然后继续递归<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (obj.refl == SPEC)            <span class="comment">// Ideal SPECULAR reflection </span></div><div class="line">        <span class="keyword">return</span> obj.emission + f.mult(radiance(Ray(x, r.d - n * <span class="number">2</span> * n.dot(r.d)), depth, Xi));</div></pre></td></tr></table></figure></p>
<p>4）反射和折射（材质为REFR）<br>玻璃材质，有一部分光进行反射，有一部分光进行折射。<br>这里用到了轮盘赌方法。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Ray reflRay(x, r.d - n * 2 * n.dot(r.d));     // Ideal dielectric REFRACTION 由平行四边形的方法求得反射光的direction</div><div class="line">    bool into = n.dot(nl)&gt;0;                // Ray from outside going in? </div><div class="line">    double nc = 1, nt = 1.5, nnt = into ? nc / nt : nt / nc, ddn = r.d.dot(nl), cos2t;</div><div class="line">    if ((cos2t = 1 - nnt*nnt*(1 - ddn*ddn))&lt;0)    // Total internal reflection </div><div class="line">        return obj.emission + f.mult(radiance(reflRay, depth, Xi));</div><div class="line">    Vec tdir = (r.d*nnt - n*((into ? 1 : -1)*(ddn*nnt + sqrt(cos2t)))).norm();</div><div class="line">    double a = nt - nc, b = nt + nc, R0 = a*a / (b*b), c = 1 - (into ? -ddn : tdir.dot(n));</div><div class="line">    double Re = R0 + (1 - R0)*c*c*c*c*c, Tr = 1 - Re, P = .25 + .5*Re, RP = Re / P, TP = Tr / (1 - P);</div><div class="line">    return obj.emission + f.mult(depth&gt;2 ? (erand48(Xi)&lt;P ?   // Russian roulette </div><div class="line">        radiance(reflRay, depth, Xi)*RP : radiance(Ray(x, tdir), depth, Xi)*TP) :</div><div class="line">        radiance(reflRay, depth, Xi)*Re + radiance(Ray(x, tdir), depth, Xi)*Tr);</div></pre></td></tr></table></figure></p>
<hr>
<p>参考链接：<br>[1]<a href="https://drive.google.com/file/d/0B8g97JkuSSBwUENiWTJXeGtTOHFmSm51UC01YWtCZw/view" target="_blank" rel="external">https://drive.google.com/file/d/0B8g97JkuSSBwUENiWTJXeGtTOHFmSm51UC01YWtCZw/view</a></p>
<p>[2]<a href="http://www.kevinbeason.com/smallpt/#moreinfo" target="_blank" rel="external">http://www.kevinbeason.com/smallpt/#moreinfo</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要是为了记录我学习smallpt的过程。第一部分是关于整个程序的大致分解。第二部分主要说一下我对main函数中cx和cy的理解。第三部分主要说明光线跟踪的每一行代码所用到的数学知识。&lt;br&gt;
    
    </summary>
    
      <category term="光线跟踪" scheme="https://fattymelon.github.io/categories/%E5%85%89%E7%BA%BF%E8%B7%9F%E8%B8%AA/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://fattymelon.github.io/2017/03/20/hello-world/"/>
    <id>https://fattymelon.github.io/2017/03/20/hello-world/</id>
    <published>2017-03-20T06:26:55.000Z</published>
    <updated>2017-05-25T06:56:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<!-- toc -->
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<h3 id="Highlight-Text"><a href="#Highlight-Text" class="headerlink" title="Highlight Text"></a>Highlight Text</h3><p>test <span class="highlight-text danger">your highlighted text</span>. Does it work?   





test <span class="highlight-text yellow">your highlighted text</span>. Does it work?</p>
<h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><div class="figure right fig-75" style="width:;"><a class="fancybox" href="http://st.gde-fon.com/wallpapers_original/542985_reka_kolumbiya_shtat_vashington_peyzaj_4684x3025_www.Gde-Fon.com.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://st.gde-fon.com/wallpapers_original/542985_reka_kolumbiya_shtat_vashington_peyzaj_4684x3025_www.Gde-Fon.com.jpg" alt=""></a></div>
<div class="figure right fig-25" style="width:;"><a class="fancybox" href="http://img.tuku.com/upload/attach/2013/07/98031-9wo1TE2.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://img.tuku.com/upload/attach/2013/07/98031-9wo1TE2.jpg" alt=""></a></div>  
<div class="figure right fig-25" style="width:;"><a class="fancybox" href="http://pic1.win4000.com/wallpaper/c/5716f22b06e93.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://pic1.win4000.com/wallpaper/c/5716f22b06e93.jpg" alt=""></a></div>
<div class="figure right fig-25" style="width:;"><a class="fancybox" href="http://desk.fd.zol-img.com.cn/t_s960x600c5/g5/M00/02/01/ChMkJ1bKxJuIC9j4AA0ddWOyVH8AALHJgNVISwADR2N309.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://desk.fd.zol-img.com.cn/t_s960x600c5/g5/M00/02/01/ChMkJ1bKxJuIC9j4AA0ddWOyVH8AALHJgNVISwADR2N309.jpg" alt=""></a></div>
<div class="figure " style="width:;"><a class="fancybox" href="http://www.timelinecoverphotomaker.com/sites/default/files/facebook-cover-photos/2013/07/beautiful-sunshine-facebook-cover-photo.jpg" title="A beautiful sunrise" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://www.timelinecoverphotomaker.com/sites/default/files/facebook-cover-photos/2013/07/beautiful-sunshine-facebook-cover-photo.jpg" alt="A beautiful sunrise"></a><span class="caption">A beautiful sunrise</span></div><div style="clear:both;"></div>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="codeblock codeblock--tabbed"><figcaption><a href="http://example.com" target="_blank" rel="external">example</a><ul class="tabs"><li class="tab active">c</li><li class="tab">js</li><li class="tab">css</li></ul></figcaption><div class="tabs-content"><figure class="highlight c" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; <span class="number">10</span>; ++i) {</span><br><span class="line">        test;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight js" style="display: none;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> test = <span class="string">'test'</span>;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight css" style="display: none;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn</span> {</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></figure>
<h3 id="video"><a href="#video" class="headerlink" title="video"></a>video</h3><div class="video-container"><iframe src="//www.youtube.com/embed/EKyirtVHsK0" frameborder="0" allowfullscreen></iframe></div>
<h3 id="Wide-image"><a href="#Wide-image" class="headerlink" title="Wide image"></a>Wide image</h3><!-- endcontent --><div class="figure figure--fullWidth"><img class="figure-img" src="http://www.timelinecoverphotomaker.com/sites/default/files/facebook-cover-photos/2013/07/beautiful-sunshine-facebook-cover-photo.jpg" alt="A beautiful sunrise"><span class="caption">A beautiful sunrise</span></div><!-- content -->
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
